name: publish-release-on-tag
on:
  push:
    tags:
      - 'v*'
jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - run: |
          # need to install setuptools first, as wrapt's (pylint sub-dep) install scripts depends on it
          python3 -m pip install -r .github/workflows/setuptools-requirements.txt
          python3 -m pip install -r .github/workflows/pylint-requirements.txt
          python3 -m pip install -r requirements.txt
          python3 -m pylint -E dyco
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - run: |
          python3 -m pip install -r .github/workflows/black-requirements.txt
          python3 -m black --diff --check dyco
  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - run: docker run --rm -i hadolint/hadolint:latest-alpine < Dockerfile
  release:
    needs:
      - pylint
      - black
      - hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  deploy:
    needs: release
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_PLATFORMS: >-
        linux/amd64
        linux/arm/v6
        linux/arm64/v8
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: docker client upgrade
        run: |
          repo="https://download.docker.com/linux/ubuntu"
          curl -fsSL "${repo}/gpg" | sudo apt-key add -
          os="$(lsb_release -cs)"
          sudo add-apt-repository "deb [arch=amd64] ${repo} ${os} stable"
          sudo apt-get update
          sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce-cli
      - name: qemu-user-static install
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: docker buildx enable
        run: |
          docker buildx ls
          docker buildx create --use --name mybuilder
          docker buildx inspect --bootstrap
          docker buildx install
      - name: dockerhub registry login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_LOGIN }}" --password-stdin
      - name: build and push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,^refs/tags/,,')

          TAGS=("dyco:${VERSION}")
          [ "$(git tag | sort -V | tail -n1)" == "${VERSION}" ] && TAGS+=("dyco:latest")
          echo "TAGS=${TAGS[@]}"

          # build cli option array for tags
          declare -a TAG_ARGS=()
          for tag in "${TAGS[@]}"; do
            TAG_ARGS+=(--tag "${{ secrets.DOCKERHUB_LOGIN }}/${tag}")
          done

          docker build --squash --push --platform "${DOCKER_PLATFORMS// /,}" "${TAG_ARGS[@]}" --build-arg DYCO_VERSION="${VERSION}" .
