name: publish-release-on-tag
on:
  push:
    tags:
      - 'v*'
jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          python3 -m pip install --upgrade pip
          # need to install setuptools first, as wrapt's (pylint sub-dep) install scripts depends on it
          python3 -m pip install -r .github/workflows/setuptools-requirements.txt
          python3 -m pip install -r .github/workflows/pylint-requirements.txt
          python3 -m pip install --require-hashes -r requirements.txt
          python3 -m pylint -E dyco
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r .github/workflows/black-requirements.txt
          python3 -m black --diff --check dyco
  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - run: docker run --rm -i hadolint/hadolint:latest-alpine < Dockerfile
  release:
    needs:
      - pylint
      - black
      - hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  deploy:
    needs: release
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_PLATFORMS: >-
        linux/amd64
        linux/arm/v6
        linux/arm64/v8
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: set env variables
        env:
          IMAGE_NAME: dyco
        run: |
          GIT_SHORT_SHA=${GITHUB_SHA:0:8}
          GIT_TAG=$(echo ${GITHUB_REF} | sed -e 's,^refs/tags/,,')
          IMAGE_TAGS="${IMAGE_NAME}:${GIT_SHORT_SHA},${IMAGE_NAME}:${GIT_TAG}"
          [ "$(git tag | sort -V | tail -n1)" == "${GIT_TAG}" ] && IMAGE_TAGS+=",${IMAGE_NAME}:latest"
          echo "image_tags=${IMAGE_TAGS}" >> ${GITHUB_ENV}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_LOGIN }}
          password: ${{ secrets.CR_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            DYCO_VERSION=${{ env.tag }}
          tags: ${{ env.image_tags }}
